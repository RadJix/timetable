{"version":3,"sources":["components/schools/Schools.module.css","components/schools/table/Table.module.css","components/schools/table/Table.jsx","components/schools/Schools.jsx","state/state.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Table","props","className","s","table","date","place","description","title","teachers","teacher","schools","Schools","useState","data","setData","teacherFilterValue","setTeacher","schoolFilterValue","setSchoolFilterValue","dateFilterBegin","setDateFilterBegin","dateFilterEnd","setDateFilterEnd","useEffect","axios","get","then","response","resultTemp","map","item","length","name","join","ms","search__form","school","onChange","e","target","value","lecturers","type","lecturerName","id","start","Date","parse","end","filter","toLowerCase","includes","toString","index","toLocaleDateString","state","Lecture","interfaceLecture","link","interfaceTeachers","about","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d45dbf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"schools\":\"Schools_schools__1aB7L\",\"lecturers\":\"Schools_lecturers__qAUoh\",\"date\":\"Schools_date__taMF8\",\"lecturerName\":\"Schools_lecturerName__348tJ\",\"school\":\"Schools_school__17Rt3\",\"start\":\"Schools_start__2DJMv\",\"end\":\"Schools_end__EAOot\",\"search__form\":\"Schools_search__form__fQ0Li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3p7-A\",\"description\":\"Table_description__hUjLL\"};","import React from \"react\";\nimport s from \"./Table.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Table = (props) => {\n  return (\n    <div className={s.table}>\n      <div className={s.date}>{props.date}</div>\n      <div className={s.place}>{props.place}</div>\n      <div className={s.description}>{props.title}</div>\n      <div className={s.teachers}>{props.teacher}</div>\n      <div className={s.schools}>{props.schools}</div>\n    </div>\n  );\n};\n\nTable.propTypes = {\n  date: PropTypes.string,\n  place: PropTypes.string,\n  title: PropTypes.string,\n  teacher: PropTypes.string,\n  schools: PropTypes.string,\n};\n\nexport default Table;","import React, { useEffect, useState } from \"react\";\nimport s from \"./Schools.module.css\";\nimport Table from \"./table/Table\";\nimport axios from \"axios\";\n\nconst Schools = () => {\n  const bigDate = 9617580800000;\n\n  const [data, setData] = useState(null);\n\n  const [teacherFilterValue, setTeacher] = useState(\"\");\n\n  const [schoolFilterValue, setSchoolFilterValue] = useState(\"\");\n\n  const [dateFilterBegin, setDateFilterBegin] = useState(0);\n\n  const [dateFilterEnd, setDateFilterEnd] = useState(bigDate);\n\n  const dataRequest = () => {\n    axios.get(\"https://agazizov.pro/schedule-api\").then((response) => {\n      const resultTemp = response.data.map((item) => {\n        const name = item.teachers.length > 0 ? item.teachers[0].name : \"\";\n        return {\n          teacher: name,\n          date: item.date,\n          place: item.place,\n          title: item.title,\n          schools: item.schools.join(\",\"),\n        };\n      });\n      setData(resultTemp);\n    });\n  };\n\n  useEffect(() => {\n    dataRequest();\n  }, []);\n\n  const filterData = (ms) =>\n    ms.filter((item) => {\n      return (\n        item.teacher\n          .toLowerCase()\n          .includes(teacherFilterValue.toString().toLowerCase()) &&\n        item.schools.toLowerCase().includes(schoolFilterValue.toLowerCase()) &&\n        dateFilterBegin <= new Date(item.date) &&\n        dateFilterEnd >= new Date(item.date)\n      );\n    });\n  return (\n    <div>\n      <nav>\n        <form className={s.search__form}>\n          <div className={s.schools}>\n            <span>Направление</span>\n            <div>\n              <select\n                className={s.school}\n                onChange={(e) => setSchoolFilterValue(e.target.value)}\n              >\n                <option value=\"\">Все направления</option>\n                <option value=\"frontend\">Frontend</option>\n                <option value=\"backend\">Backend</option>\n                <option value=\"design\">Design</option>\n              </select>\n            </div>\n          </div>\n          <div className={s.lecturers}>\n            <span>Лектор</span>\n            <div>\n              <input\n                type=\"text\"\n                className={s.lecturerName}\n                onChange={(e) => setTeacher(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className={s.date}>\n            <span>Дата лекции</span>\n            <div>\n              c\n              <input\n                type=\"date\"\n                id=\"start-date\"\n                className={s.start}\n                onChange={(e) => setDateFilterBegin(Date.parse(e.target.value))}\n              />\n              по\n              <input\n                type=\"date\"\n                id=\"end-date\"\n                className={s.end}\n                onChange={(e) => setDateFilterEnd(Date.parse(e.target.value))}\n              />\n            </div>\n          </div>\n        </form>\n      </nav>\n      <div>\n        {data\n          ? filterData(data).map((item, index) => (\n              <Table\n                key={index}\n                teacher={item.teacher}\n                place={item.place}\n                title={item.title}\n                schools={item.schools}\n                date={new Date(item.date).toLocaleDateString()}\n              />\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Schools;\n","\nconst state = {\n  Lecture: [\n    {\n      interfaceLecture: {\n        title: \"Первая лекция\",\n        link: null,\n        teachers: \"Дмитрий Моруз\",\n        schools: [\"backend\", \"frontend\", \"design\"],\n        date: 1617580800000,\n        place: \"Кабинет, которого нет\",\n      },\n      interfaceTeachers: {\n        name: \"Дмитрий Моруз\",\n        link: null,\n        about: \"\",\n      },\n    },\n    {\n      interfaceLecture: {\n        title: \"Дополнительная лекция\",\n        link: null,\n        teachers: \"Навальный А.Г\",\n        schools: [\"backend\", \"design\"],\n        date: 1617753600000,\n        place: \"Кабинет, которого нет\",\n      },\n      interfaceTeachers: {\n        name: \"Навальный А.Г\",\n        link: null,\n        about: \"\",\n      },\n    },\n    {\n      interfaceLecture: {\n        title: \"Алгоритмы и структры данных\",\n        link: null,\n        teachers: \"Стась А.Н\",\n        schools: [\"design\"],\n        date: 1617926400000,\n        place: \"УЛК 4/04\",\n      },\n      interfaceTeachers: {\n        name: \"Стась А.Н\",\n        link: null,\n        about: \"\",\n      },\n    },\n    {\n      interfaceLecture: {\n        title: \"Математический анализ\",\n        link: null,\n        teachers: \"Семешин Н.В\",\n        schools: [\"frontend\", \"design\"],\n        date: 1618012800000,\n        place: \"256a\",\n      },\n      interfaceTeachers: {\n        name: \"Семешин Н.В  \",\n        link: null,\n        about: \"\",\n      },\n    },\n  ],\n};\n\n\n\n\n\nexport default state;","import React from \"react\";\nimport \"./App.css\";\nimport Schools from \"./components/schools/Schools\";\nimport state from \"./state/state\";\n\nfunction App() {\n  return <Schools state={state} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n         <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}